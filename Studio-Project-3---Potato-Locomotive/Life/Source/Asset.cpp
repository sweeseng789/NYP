#include "Asset.h"


/******************************************************************************/
/*!
\brief	
constructor
\param mesh
	mesh of Asset
\param bound
	collision shape
\param mass
	mass of Asset
*/
/******************************************************************************/
Asset::Asset(Mesh *mesh, Shape *bound, float mass)
{
	this->mesh = mesh;
	this->bound = bound;
	this->mass = mass;
}
/******************************************************************************/
/*!
\brief	
constructor
*/
/******************************************************************************/
Asset::Asset(){}
/******************************************************************************/
/*!
\brief	
destructor
*/
/******************************************************************************/
Asset::~Asset(){}

/******************************************************************************/
/*!
\brief	
Sets Mesh of Asset
\param mesh
	mesh
*/
/******************************************************************************/
void Asset::setMesh(Mesh *mesh)
{
	this->mesh = mesh;
}
/******************************************************************************/
/*!
\brief	
Sets collision shape of Asset
\param bound
	bound
*/
/******************************************************************************/
void Asset::setBound(Shape *bound)
{
	this->bound = bound;
}
/******************************************************************************/
/*!
\brief	
Sets mass of Asset
\param mass
	mass
*/
/******************************************************************************/
void Asset::setMass(float mass)
{
	this->mass = mass;
}

/******************************************************************************/
/*!
\brief	
Gets Mesh of Asset
\return 
mesh
*/
/******************************************************************************/
Mesh * Asset::getMesh(void)const
{
	return this->mesh;
}
/******************************************************************************/
/*!
\brief	
Gets shape of Asset
\return 
bound
*/
/******************************************************************************/
Shape * Asset::getBound(void)const
{
	return this->bound;
}
/******************************************************************************/
/*!
\brief	
Gets mass of Asset
\return 
mass
*/
/******************************************************************************/
float Asset::getMass(void)const
{
	return this->mass;
}
/******************************************************************************/
/*!
\brief	
Does Asset Move
\return
true = Asset can move
*/
/******************************************************************************/
bool Asset::getFixed(void)const
{
	return this->isFixed;
}
/******************************************************************************/
/*!
\brief	
Gets the type of Asset
\return 
type
*/
/******************************************************************************/
int Asset::getType(void)const
{
	return this->type;
}